[{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"read_flights","dir":"Articles","previous_headings":"","what":"1) read_flights():","title":"Introduction to flightsbr","text":"Flights data include detailed information every international flight Brazil, well domestic flights within country. data include flight-level information airports origin destination, flight duration, aircraft type, payload, number passengers, well several variables. - Data dictionary flights.","code":""},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"read_airports","dir":"Articles","previous_headings":"","what":"2) read_airports():","title":"Introduction to flightsbr","text":"Airports data covers airports aerodromes registered Brazil’s Civil Aviation Agency (ANAC). includes detailed information ICAO code, municipality, geographical coordinates, runway dimensions etc. Public airports. Private airports.","code":""},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"read_aircraft","dir":"Articles","previous_headings":"","what":"3) read_aircraft():","title":"Introduction to flightsbr","text":"aircraft registered Brazilian Aeronautical Registry (Registro Aeronáutico Brasileiro - RAB), organized Brazilian Civil Aviation Agency (ANAC). - Data dictionary aircraft data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"read_airport_movements","dir":"Articles","previous_headings":"","what":"4) read_airport_movements():","title":"Introduction to flightsbr","text":"data covers passenger, aircraft, cargo mail movement airports regulated ANAC. - Data dictionary airport movements data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"read_airfares","dir":"Articles","previous_headings":"","what":"5) read_airfares():","title":"Introduction to flightsbr","text":"data covers airfares domestic international flights. domestic airfares. international airfares.","code":""},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"basic-usage","dir":"Articles","previous_headings":"","what":"Basic usage","title":"Introduction to flightsbr","text":"using flightsbr please make sure installed computer. can download stable version CRAN. Now can load library start downloading data.","code":"install.packages(\"flightsbr\") library(flightsbr)"},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"download-flights-data","dir":"Articles","previous_headings":"Basic usage","what":"Download flights data:","title":"Introduction to flightsbr","text":"","code":"# in a given **month* of a given **year** (yyyymm) df_201506 <- read_flights(date = 201506, showProgress = FALSE)  # in a given year (yyyy) df_2015 <- read_flights(date = 2015, showProgress = FALSE)"},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"download-airports-data","dir":"Articles","previous_headings":"Basic usage","what":"Download airports data:","title":"Introduction to flightsbr","text":"","code":"airports_all <- flightsbr::read_airports(type = 'all', showProgress = FALSE)  airports_prv <- flightsbr::read_airports(type = 'private', showProgress = FALSE)  airports_pbl <- flightsbr::read_airports(type = 'public', showProgress = FALSE)"},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"download-data-of-aircraft","dir":"Articles","previous_headings":"Basic usage","what":"Download data of aircraft:","title":"Introduction to flightsbr","text":"","code":"aircraft <- flightsbr::read_aircraft(date = 2024, showProgress = FALSE)  head(aircraft)"},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"download-data-on-airport-movements","dir":"Articles","previous_headings":"Basic usage","what":"Download data on airport movements:","title":"Introduction to flightsbr","text":"","code":"airport_mov <- flightsbr::read_airport_movements(date = 201901)  head(airport_mov)"},{"path":"https://ipeagit.github.io/flightsbr/articles/intro_flightsbr.html","id":"download-data-on-data-on-air-fares-of-domestic-flights-in-brazil","dir":"Articles","previous_headings":"Basic usage","what":"Download data on data on air fares of domestic flights in Brazil:","title":"Introduction to flightsbr","text":"","code":"airfares <- flightsbr::read_airfares(date = 202003, domestic = TRUE)  head(airfares)"},{"path":"https://ipeagit.github.io/flightsbr/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Rafael H. M. Pereira. Author, maintainer. Ipea - Institute Applied Economic Research. Copyright holder, funder.","code":""},{"path":"https://ipeagit.github.io/flightsbr/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Pereira, R.H.M. (2022). flightsbr: Download Flight Airport Data Brazil. R package (Version 0.2.0). OSF Preprints. https://doi.org/10.31219/osf.io/jdv7u.","code":"@Article{,   title = {flightsbr: Download Flight and Airport Data from Brazil},   author = {Rafael H. M. Pereira},   month = {Fev},   year = {2022},   journal = {OSF Preprints},   version = {v0.2.0},   doi = {10.31219/osf.io/jdv7u},   url = {https://doi.org/10.31219/osf.io/jdv7u}, }"},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"flightsbr-download-flight-and-airport-data-from-brazil-","dir":"","previous_headings":"","what":"Download Flight and Airport Data from Brazil","title":"Download Flight and Airport Data from Brazil","text":"flightsbr R package designed facilitate download comprehensive flight airport data Brazil’s Civil Aviation Agency (ANAC). package provides access detailed information aircraft, airports, airport operations registered ANAC. also includes data airfares, international flights Brazil, domestic flights within country.","code":""},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Download Flight and Airport Data from Brazil","text":"","code":"# From CRAN   install.packages(\"flightsbr\")  # or use the development version with latest features   utils::remove.packages('flightsbr')   remotes::install_github(\"ipeaGIT/flightsbr\")"},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"basic-usage","dir":"","previous_headings":"","what":"Basic usage","title":"Download Flight and Airport Data from Brazil","text":"package currently includes five main functions: read_flights() read_airports() read_aircraft() read_airport_movements() read_airfares()","code":""},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"id_1-read_flights-to-download-data-on-national-and-international-flights","dir":"","previous_headings":"Basic usage","what":"1) read_flights() to download data on national and international flights.","title":"Download Flight and Airport Data from Brazil","text":"","code":"# flights in a given month/year (yyyymm) df_201506 <- read_flights(date = 201506)  # flights in a given year (yyyy) df_2015 <- read_flights(date = 2015)"},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"id_2-read_airports-to-download-data-on-private-and-public-airports","dir":"","previous_headings":"Basic usage","what":"2) read_airports() to download data on private and public airports.","title":"Download Flight and Airport Data from Brazil","text":"","code":"# all airports airports_all <- flightsbr::read_airports(type = 'all')  # public airports airports_pbl <- flightsbr::read_airports(type = 'public')  # private airports airports_prv <- flightsbr::read_airports(type = 'private')"},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"id_3-read_aircraft-to-download-aircraft-data","dir":"","previous_headings":"Basic usage","what":"3) read_aircraft() to download aircraft data.","title":"Download Flight and Airport Data from Brazil","text":"","code":"aircraft <- read_aircraft(date = 2024)"},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"id_4-read_airport_movements-to-download-data-on-aiport-movements","dir":"","previous_headings":"Basic usage","what":"4) read_airport_movements() to download data on aiport movements.","title":"Download Flight and Airport Data from Brazil","text":"","code":"airport_ops <- read_airport_movements(date = 202001)"},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"id_5-read_airfares-to-download-data-on-airfares-of-domestic-or-international-flights","dir":"","previous_headings":"Basic usage","what":"5) read_airfares() to download data on airfares of domestic or international flights.","title":"Download Flight and Airport Data from Brazil","text":"","code":"airfares <- read_airfares(date = 202001, domestic = TRUE)"},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"related-projects","dir":"","previous_headings":"Basic usage","what":"Related projects","title":"Download Flight and Airport Data from Brazil","text":"Similar packages countries/continents - World: openSkies: client interface ‘OpenSky’ API - USA: anyflights Similar projects Brazil: today, two repositories/projects Brazilian aviation data, include info related weather conditions, air traffic management etc. advantage flightsbt ’s easiest fastest way download flight airport Data Brazil R. AVSTATS-Brasil, team ITA Integrated Dataset Brazilian Flights, team CEFET-RJ.","code":""},{"path":"https://ipeagit.github.io/flightsbr/index.html","id":"acknowledgement-","dir":"","previous_headings":"","what":"Acknowledgement","title":"Download Flight and Airport Data from Brazil","text":"Original data collected Brazil’s Civil Aviation Agency (ANAC). flightsbr package developed team Institute Applied Economic Research (Ipea), Brazil. want cite package, can cite : Pereira, R.H.M. (2022). flightsbr: Download Flight Airport Data Brazil. R package (Version 0.1.0). OSF. https://doi.org/10.31219/osf.io/jdv7u","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/altitude_to_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert altitude column to numeric — altitude_to_numeric","title":"Convert altitude column to numeric — altitude_to_numeric","text":"Convert altitude column numeric","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/altitude_to_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert altitude column to numeric — altitude_to_numeric","text":"","code":"altitude_to_numeric(df)"},{"path":"https://ipeagit.github.io/flightsbr/reference/altitude_to_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert altitude column to numeric — altitude_to_numeric","text":"df data.frame internal read_airport() function.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/altitude_to_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert altitude column to numeric — altitude_to_numeric","text":"\"data.table\" \"data.frame\" object","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/check_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether date input is acceptable — check_date","title":"Check whether date input is acceptable — check_date","text":"Check whether date input acceptable","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/check_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether date input is acceptable — check_date","text":"","code":"check_date(date, all_dates)"},{"path":"https://ipeagit.github.io/flightsbr/reference/check_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether date input is acceptable — check_date","text":"date Numeric. Either 6-digit date format yyyymm 4-digit date input yyyy . all_dates Numeric vector created get_all_dates_available() function.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/check_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether date input is acceptable — check_date","text":"Check messages.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/check_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether date input is acceptable — check_date","text":"","code":"if (FALSE)  if (interactive()) {  # get all dates available all_dates <- get_all_dates_available()  # check dates a <- check_date(200011, all_dates) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/check_input_date_format.html","id":null,"dir":"Reference","previous_headings":"","what":"Check whether the format of the date input is acceptable — check_input_date_format","title":"Check whether the format of the date input is acceptable — check_input_date_format","text":"Check whether format date input acceptable","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/check_input_date_format.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check whether the format of the date input is acceptable — check_input_date_format","text":"","code":"check_input_date_format(date = parent.frame()$date)"},{"path":"https://ipeagit.github.io/flightsbr/reference/check_input_date_format.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check whether the format of the date input is acceptable — check_input_date_format","text":"date Vector. Either 6-digit date format yyyymm 4-digit date input yyyy .","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/check_input_date_format.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check whether the format of the date input is acceptable — check_input_date_format","text":"Check messages.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/check_input_date_format.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check whether the format of the date input is acceptable — check_input_date_format","text":"","code":"if (FALSE)  if (interactive()) {  # get all dates available all_dates <- get_all_dates_available()  # check dates a <- check_date(200011, all_dates) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_aircraft_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and read ANAC aircraft data — download_aircraft_data","title":"Download and read ANAC aircraft data — download_aircraft_data","text":"Download read ANAC aircraft data","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_aircraft_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and read ANAC aircraft data — download_aircraft_data","text":"","code":"download_aircraft_data(   file_url = parent.frame()$file_url,   showProgress = parent.frame()$showProgress,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_aircraft_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and read ANAC aircraft data — download_aircraft_data","text":"file_url String. url passed get_flights_url. showProgress Logical, passed read_flights cache Logical, passed read_flights","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_aircraft_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and read ANAC aircraft data — download_aircraft_data","text":"\"data.table\" \"data.frame\" object","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_aircraft_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and read ANAC aircraft data — download_aircraft_data","text":"","code":"if (FALSE)  if (interactive()) { # Generate url file_url <- get_airfares_url(dom = TRUE, year=2002, month=11)  # download data a <- download_airfares_data(file_url=file_url, showProgress=TRUE, select=NULL) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airfares_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and read ANAC air fares data — download_airfares_data","title":"Download and read ANAC air fares data — download_airfares_data","text":"Download read ANAC air fares data","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airfares_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and read ANAC air fares data — download_airfares_data","text":"","code":"download_airfares_data(   file_urls = parent.frame()$file_urls,   showProgress = parent.frame()$showProgress,   select = parent.frame()$select,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airfares_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and read ANAC air fares data — download_airfares_data","text":"file_urls String. url passed get_flights_url. showProgress Logical. Defaults TRUE display progress. select vector column names positions keep. rest columns read. order columns passed determines order columns result. cache Logical. Whether function read cached data downloaded previously. Defaults TRUE. FALSE, function always download data overwrite cached data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airfares_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and read ANAC air fares data — download_airfares_data","text":"\"data.table\" \"data.frame\" object","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airfares_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and read ANAC air fares data — download_airfares_data","text":"","code":"if (FALSE)  if (interactive()) { # Generate url file_url <- get_airfares_url(dom = TRUE, date=200211)  # download data a <- download_airfares_data(file_urls=file_url, showProgress=TRUE, select=NULL) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airport_movement_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and read ANAC airport movement data — download_airport_movement_data","title":"Download and read ANAC airport movement data — download_airport_movement_data","text":"Download read ANAC airport movement data","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airport_movement_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and read ANAC airport movement data — download_airport_movement_data","text":"","code":"download_airport_movement_data(   file_url = parent.frame()$file_url,   showProgress = parent.frame()$showProgress,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airport_movement_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and read ANAC airport movement data — download_airport_movement_data","text":"file_url String. url passed read_airport_movements. showProgress Logical, passed read_airport_movements cache Logical, passed read_airport_movements","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airport_movement_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and read ANAC airport movement data — download_airport_movement_data","text":"\"data.table\" \"data.frame\" object","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_airport_movement_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and read ANAC airport movement data — download_airport_movement_data","text":"","code":"if (FALSE)  if (interactive()) { # Generate url file_url <- get_airport_movements_url(year=2020, month=11)  # download data a <- download_airport_movement_data(file_url=file_url, showProgress=TRUE) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flights_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Download and read ANAC flight data — download_flights_data","title":"Download and read ANAC flight data — download_flights_data","text":"Download read ANAC flight data","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flights_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download and read ANAC flight data — download_flights_data","text":"","code":"download_flights_data(   file_url = parent.frame()$file_url,   showProgress = parent.frame()$showProgress,   select = parent.frame()$select,   cache = parent.frame()$cache )"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flights_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download and read ANAC flight data — download_flights_data","text":"file_url String. url passed get_flights_url. showProgress Logical, passed read_flights select vector column names numbers keep, passed read_flights cache Logical, passed read_flights","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flights_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download and read ANAC flight data — download_flights_data","text":"\"data.table\" \"data.frame\" object","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flights_data.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download and read ANAC flight data — download_flights_data","text":"","code":"if (FALSE)  if (interactive()) { # Generate url file_url <- get_flights_url(type='basica', year=2000, month=11)  # download data a <- download_flights_data(file_url=file_url, showProgress=TRUE, select=NULL) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flightsbr_file.html","id":null,"dir":"Reference","previous_headings":"","what":"Download file from url — download_flightsbr_file","title":"Download file from url — download_flightsbr_file","text":"Download file url","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flightsbr_file.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download file from url — download_flightsbr_file","text":"","code":"download_flightsbr_file(   file_url = parent.frame()$file_url,   showProgress = parent.frame()$showProgress,   dest_file = temp_local_file,   cache = cache )"},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flightsbr_file.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download file from url — download_flightsbr_file","text":"file_url String. url passed get_flights_url. showProgress Logical, passed read_flights dest_file String, passed read_flights cache Logical, passed read_flights","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flightsbr_file.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download file from url — download_flightsbr_file","text":"Silently saves downloaded file temp dir.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/download_flightsbr_file.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download file from url — download_flightsbr_file","text":"","code":"if (FALSE)  if (interactive()) { # Generate url file_url <- get_flights_url(type='basica', date=200011)  # download data download_flightsbr_file(file_url=file_url,                         showProgress=TRUE,                         dest_file = tempfile(fileext = \".zip\")                        ) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/flightsbr.html","id":null,"dir":"Reference","previous_headings":"","what":"flightsbr: Download Flight and Airport Data from Brazil — flightsbr","title":"flightsbr: Download Flight and Airport Data from Brazil — flightsbr","text":"Download flight airport data Brazil’s Civil Aviation Agency (ANAC) https://www.gov.br/anac/pt-br. data includes detailed information aircrafts, aerodromes, airports, airport movements registered ANAC, every international flight Brazil, well domestic flights within country.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/flightsbr.html","id":"usage","dir":"Reference","previous_headings":"","what":"Usage","title":"flightsbr: Download Flight and Airport Data from Brazil — flightsbr","text":"Please check vignettes data documentation website.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/flightsbr/reference/flightsbr.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"flightsbr: Download Flight and Airport Data from Brazil — flightsbr","text":"Maintainer: Rafael H. M. Pereira rafa.pereira.br@gmail.com (ORCID) contributors: Ipea - Institute Applied Economic Research [copyright holder, funder]","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/generate_all_months.html","id":null,"dir":"Reference","previous_headings":"","what":"Generate all months with yyyymm format for a given year — generate_all_months","title":"Generate all months with yyyymm format for a given year — generate_all_months","text":"Generate months yyyymm format given year","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/generate_all_months.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Generate all months with yyyymm format for a given year — generate_all_months","text":"","code":"generate_all_months(date)"},{"path":"https://ipeagit.github.io/flightsbr/reference/generate_all_months.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Generate all months with yyyymm format for a given year — generate_all_months","text":"date Numeric. 4-digit date format yyyy. function also takes multiple years.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/generate_all_months.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Generate all months with yyyymm format for a given year — generate_all_months","text":"Vector strings.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/generate_all_months.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Generate all months with yyyymm format for a given year — generate_all_months","text":"","code":"if (FALSE)  if (interactive()) { # Generate all months in 2000 a <- check_date(2000)  b <- check_date(c(2000, 2005)) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_aircraft_dates_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all dates available for aircraft data from ANAC website — get_aircraft_dates_available","title":"Retrieve all dates available for aircraft data from ANAC website — get_aircraft_dates_available","text":"Retrieve dates available aircraft data ANAC website","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_aircraft_dates_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all dates available for aircraft data from ANAC website — get_aircraft_dates_available","text":"","code":"get_aircraft_dates_available()"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_aircraft_dates_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve all dates available for aircraft data from ANAC website — get_aircraft_dates_available","text":"Numeric vector.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_aircraft_dates_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve all dates available for aircraft data from ANAC website — get_aircraft_dates_available","text":"","code":"if (FALSE)  if (interactive()) { # check dates a <- get_aircraft_dates_available() } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_aircraft_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Put together the url of aircraft data files — get_aircraft_url","title":"Put together the url of aircraft data files — get_aircraft_url","text":"Put together url aircraft data files","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_aircraft_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put together the url of aircraft data files — get_aircraft_url","text":"","code":"get_aircraft_url(date = parent.frame()$date)"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_aircraft_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put together the url of aircraft data files — get_aircraft_url","text":"date Numeric. Either 6-digit date format yyyymm 4-digit date input yyyy. Defaults NULL, case function retrieves information years available.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_aircraft_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put together the url of aircraft data files — get_aircraft_url","text":"url string.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_aircraft_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put together the url of aircraft data files — get_aircraft_url","text":"","code":"if (FALSE)  if (interactive()) { # Generate url a <- get_flights_url(year=2000, month=11) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_dates_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all dates available for airfares data from ANAC website — get_airfares_dates_available","title":"Retrieve all dates available for airfares data from ANAC website — get_airfares_dates_available","text":"Retrieve dates available airfares data ANAC website","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_dates_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all dates available for airfares data from ANAC website — get_airfares_dates_available","text":"","code":"get_airfares_dates_available(dom)"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_dates_available.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieve all dates available for airfares data from ANAC website — get_airfares_dates_available","text":"dom Logical. Defaults TRUE download airfares domestic flights. FALSE, function downloads airfares international flights.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_dates_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve all dates available for airfares data from ANAC website — get_airfares_dates_available","text":"Numeric vector.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_dates_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve all dates available for airfares data from ANAC website — get_airfares_dates_available","text":"","code":"if (FALSE)  if (interactive()) { # check dates a <- get_airfares_dates_available(domestic = TRUE) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Put together the url of airfare data files — get_airfares_url","title":"Put together the url of airfare data files — get_airfares_url","text":"Put together url airfare data files","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put together the url of airfare data files — get_airfares_url","text":"","code":"get_airfares_url(dom, date = parent.frame()$date)"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put together the url of airfare data files — get_airfares_url","text":"dom Logical. Defaults TRUE download airfares domestic flights. FALSE, function downloads airfares international flights. date Numeric. Date data format yyyymm. download data months year, user can pass 4-digit year input yyyy. parameter also accepts vector dates c(202001, 202006, 202012).","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put together the url of airfare data files — get_airfares_url","text":"url string.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airfares_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put together the url of airfare data files — get_airfares_url","text":"","code":"if (FALSE)  if (interactive()) { # Generate url a <- get_airfares_url(year=2002, month=11) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airport_movement_dates_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all dates available for airport movements data — get_airport_movement_dates_available","title":"Retrieve all dates available for airport movements data — get_airport_movement_dates_available","text":"Retrieve ANAC website dates available airport movements data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airport_movement_dates_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all dates available for airport movements data — get_airport_movement_dates_available","text":"","code":"get_airport_movement_dates_available()"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airport_movement_dates_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve all dates available for airport movements data — get_airport_movement_dates_available","text":"Numeric vector.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airport_movement_dates_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve all dates available for airport movements data — get_airport_movement_dates_available","text":"","code":"if (FALSE)  if (interactive()) { # check dates a <- get_airport_movement_dates_available() } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airport_movements_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Put together the url of airport movement data files — get_airport_movements_url","title":"Put together the url of airport movement data files — get_airport_movements_url","text":"Put together url airport movement data files","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airport_movements_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put together the url of airport movement data files — get_airport_movements_url","text":"","code":"get_airport_movements_url(date = parent.frame()$date)"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airport_movements_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put together the url of airport movement data files — get_airport_movements_url","text":"date Numeric. Date data format yyyymm. Defaults 202001. download data months year, user can pass 4-digit year input yyyy. parameter also accepts vector dates c(202001, 202006, 202012).","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airport_movements_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put together the url of airport movement data files — get_airport_movements_url","text":"url string.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_airport_movements_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put together the url of airport movement data files — get_airport_movements_url","text":"","code":"if (FALSE)  if (interactive()) { # Generate url a <- get_airport_movements_url(year=2000, month=11) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_flight_dates_available.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieve all dates available for flights data from ANAC website — get_flight_dates_available","title":"Retrieve all dates available for flights data from ANAC website — get_flight_dates_available","text":"Retrieve dates available flights data ANAC website","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_flight_dates_available.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieve all dates available for flights data from ANAC website — get_flight_dates_available","text":"","code":"get_flight_dates_available()"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_flight_dates_available.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieve all dates available for flights data from ANAC website — get_flight_dates_available","text":"Numeric vector.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_flight_dates_available.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieve all dates available for flights data from ANAC website — get_flight_dates_available","text":"","code":"if (FALSE)  if (interactive()) { # check dates a <- get_flight_dates_available() } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_flights_url.html","id":null,"dir":"Reference","previous_headings":"","what":"Put together the url of flight data files — get_flights_url","title":"Put together the url of flight data files — get_flights_url","text":"Put together url flight data files","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_flights_url.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Put together the url of flight data files — get_flights_url","text":"","code":"get_flights_url(type, date)"},{"path":"https://ipeagit.github.io/flightsbr/reference/get_flights_url.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Put together the url of flight data files — get_flights_url","text":"type String. Whether data set type basica (flight stage, default) combinada (flight origin destination - OFOD). date Numeric. Date data format yyyymm. Defaults 202001. download data months year, user can pass 4-digit year input yyyy. parameter also accepts vector dates c(202001, 202006, 202012).","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_flights_url.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Put together the url of flight data files — get_flights_url","text":"url string.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/get_flights_url.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Put together the url of flight data files — get_flights_url","text":"","code":"if (FALSE)  if (interactive()) { # Generate urls a <- get_flights_url(type='basica', year=2000, month=11) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/latest_airfares_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the date of the latest airfare data available — latest_airfares_date","title":"Check the date of the latest airfare data available — latest_airfares_date","text":"Check date latest airfare data available","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/latest_airfares_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the date of the latest airfare data available — latest_airfares_date","text":"","code":"latest_airfares_date(dom = TRUE)"},{"path":"https://ipeagit.github.io/flightsbr/reference/latest_airfares_date.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check the date of the latest airfare data available — latest_airfares_date","text":"dom Logical. Defaults TRUE download airfares domestic flights. FALSE, function downloads airfares international flights.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/latest_airfares_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the date of the latest airfare data available — latest_airfares_date","text":"numeric date format yyyymm.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/flightsbr/reference/latest_airfares_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the date of the latest airfare data available — latest_airfares_date","text":"","code":"if (FALSE)  if (interactive()) {  latest_date <- latest_airfares_date()  } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/latest_flights_date.html","id":null,"dir":"Reference","previous_headings":"","what":"Check the date of the latest flight data available — latest_flights_date","title":"Check the date of the latest flight data available — latest_flights_date","text":"Check date latest flight data available","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/latest_flights_date.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check the date of the latest flight data available — latest_flights_date","text":"","code":"latest_flights_date()"},{"path":"https://ipeagit.github.io/flightsbr/reference/latest_flights_date.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check the date of the latest flight data available — latest_flights_date","text":"numeric date format yyyymm.","code":""},{"path":[]},{"path":"https://ipeagit.github.io/flightsbr/reference/latest_flights_date.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Check the date of the latest flight data available — latest_flights_date","text":"","code":"if (FALSE)  if (interactive()) {  latest_date <- latest_flights_date()  } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/latlon_to_numeric.html","id":null,"dir":"Reference","previous_headings":"","what":"Convert latitude and longitude columns to numeric — latlon_to_numeric","title":"Convert latitude and longitude columns to numeric — latlon_to_numeric","text":"Convert latitude longitude columns numeric","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/latlon_to_numeric.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Convert latitude and longitude columns to numeric — latlon_to_numeric","text":"","code":"latlon_to_numeric(df)"},{"path":"https://ipeagit.github.io/flightsbr/reference/latlon_to_numeric.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Convert latitude and longitude columns to numeric — latlon_to_numeric","text":"df data.frame internal read_airport() function.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/latlon_to_numeric.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Convert latitude and longitude columns to numeric — latlon_to_numeric","text":"\"data.table\" \"data.frame\" object","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircraft.html","id":null,"dir":"Reference","previous_headings":"","what":"Download aircraft data from Brazil — read_aircraft","title":"Download aircraft data from Brazil — read_aircraft","text":"Download data aircraft registered Brazilian Aeronautical Registry (Registro Aeronáutico Brasileiro - RAB), organized Brazilian Civil Aviation Agency (ANAC). description variables included data available https://www.gov.br/anac/pt-br/sistemas/rab.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircraft.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download aircraft data from Brazil — read_aircraft","text":"","code":"read_aircraft(date = 202001, showProgress = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircraft.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download aircraft data from Brazil — read_aircraft","text":"date Numeric. Date data format yyyymm. Defaults 202001. download data months year, user can pass 4-digit year input yyyy. function also accepts vector dates, like c(202201, 202301) c(2022, 2024). showProgress Logical. Defaults TRUE display progress. cache Logical. Whether function read cached data downloaded previously. Defaults TRUE. FALSE, function always download data overwrite cached data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircraft.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download aircraft data from Brazil — read_aircraft","text":"\"data.table\" \"data.frame\" object. columns returned class type \"character\".","code":""},{"path":[]},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircraft.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download aircraft data from Brazil — read_aircraft","text":"","code":"if (FALSE)  if (interactive()) { # Read aircraft data aircraft <- read_aircraft(date = 202001,                             showProgress = TRUE)   } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircrafts.html","id":null,"dir":"Reference","previous_headings":"","what":"Download aircrafts data from Brazil — read_aircrafts","title":"Download aircrafts data from Brazil — read_aircrafts","text":"function deprecated favor read_aircraft() simply fix typo function name.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircrafts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download aircrafts data from Brazil — read_aircrafts","text":"","code":"read_aircrafts(date = 202001, showProgress = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircrafts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download aircrafts data from Brazil — read_aircrafts","text":"date Numeric. Date data format yyyymm. Defaults 202001. download data months year, user can pass 4-digit year input yyyy. function also accepts vector dates, like c(202201, 202301) c(2022, 2024). showProgress Logical. Defaults TRUE display progress. cache Logical. Whether function read cached data downloaded previously. Defaults TRUE. FALSE, function always download data overwrite cached data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircrafts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download aircrafts data from Brazil — read_aircrafts","text":"\"data.table\" \"data.frame\" object. columns returned class type \"character\".","code":""},{"path":[]},{"path":"https://ipeagit.github.io/flightsbr/reference/read_aircrafts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download aircrafts data from Brazil — read_aircrafts","text":"","code":"if (FALSE)  if (interactive()) { # Read aircraft data aircraft <- read_aircraft(date = 202001,                           showProgress = TRUE)  } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airfares.html","id":null,"dir":"Reference","previous_headings":"","what":"Download data on airfares flights in Brazil — read_airfares","title":"Download data on airfares flights in Brazil — read_airfares","text":"Download data air fares domestic international flights Brazil. data collected Brazil’s Civil Aviation Agency (ANAC). description variables included data domestic airfares available https://www.anac.gov.br/acesso--informacao/dados-abertos/areas-de-atuacao/voos-e-operacoes-aereas/tarifas-aereas-domesticas/46-tarifas-aereas-domesticas. description variables included data international airfares available https://www.gov.br/anac/pt-br/assuntos/dados-e-estatisticas/microdados-de-tarifas-aereas-comercializadas.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airfares.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download data on airfares flights in Brazil — read_airfares","text":"","code":"read_airfares(   date = 202001,   domestic = TRUE,   showProgress = TRUE,   select = NULL,   cache = TRUE )"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airfares.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download data on airfares flights in Brazil — read_airfares","text":"date Numeric. Date data format yyyymm. Defaults 202001. download data months year, user can pass 4-digit year input yyyy. function also accepts vector dates, like c(202201, 202301) c(2022, 2024). domestic Logical. Defaults TRUE download airfares domestic flights. FALSE, function downloads airfares international flights. showProgress Logical. Defaults TRUE display progress. select vector column names positions keep. rest columns read. order columns passed determines order columns result. cache Logical. Whether function read cached data downloaded previously. Defaults TRUE. FALSE, function always download data overwrite cached data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airfares.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download data on airfares flights in Brazil — read_airfares","text":"\"data.table\" \"data.frame\" object. columns returned class type \"character\".","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airfares.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download data on airfares flights in Brazil — read_airfares","text":"","code":"if (FALSE)  if (interactive()) { # Read air fare data af_201506 <- read_airfares(date = 201506, domestic = TRUE)  af_2015 <- read_airfares(date = 2015, domestic = TRUE) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airport_movements.html","id":null,"dir":"Reference","previous_headings":"","what":"Download airport movement data from Brazil — read_airport_movements","title":"Download airport movement data from Brazil — read_airport_movements","text":"Download airport movements data Brazil’s Civil Aviation Agency (ANAC). data covers passenger, aircraft, cargo mail movement data airports regulated ANAC. Data available Jan 2019 onwards. description variables included data available https://www.anac.gov.br/acesso--informacao/dados-abertos/areas-de-atuacao/operador-aeroportuario/dados-de-movimentacao-aeroportuaria/60-dados-de-movimentacao-aeroportuaria.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airport_movements.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download airport movement data from Brazil — read_airport_movements","text":"","code":"read_airport_movements(date = 202001, showProgress = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airport_movements.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download airport movement data from Brazil — read_airport_movements","text":"date Numeric. Date data format yyyymm. Defaults 202001. download data months year, user can pass 4-digit year input yyyy. function also accepts vector dates, like c(202201, 202301) c(2022, 2024). showProgress Logical. Defaults TRUE display progress. cache Logical. Whether function read cached data downloaded previously. Defaults TRUE. FALSE, function always download data overwrite cached data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airport_movements.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download airport movement data from Brazil — read_airport_movements","text":"\"data.table\" \"data.frame\" object. columns returned class type \"character\".","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airport_movements.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download airport movement data from Brazil — read_airport_movements","text":"","code":"if (FALSE)  if (interactive()) { # Read airport movement data amov202006 <- read_airport_movements(date = 202006)  amov2020 <- read_airport_movements(date = 2020) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airports.html","id":null,"dir":"Reference","previous_headings":"","what":"Download airports data from Brazil — read_airports","title":"Download airports data from Brazil — read_airports","text":"Download data airports aerodromes registered Brazil’s Civil Aviation Agency (ANAC). Data source: https://www.gov.br/anac/pt-br/acesso--informacao/dados-abertos/areas-de-atuacao/aerodromos. data dictionary public airports can found https://www.anac.gov.br/acesso--informacao/dados-abertos/areas-de-atuacao/aerodromos/lista-de-aerodromos-publicos-v2/70-lista-de-aerodromos-publicos-v2. data dictionary private airports can found https://www.anac.gov.br/acesso--informacao/dados-abertos/areas-de-atuacao/aerodromos/lista-de-aerodromos-privados-v2.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airports.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download airports data from Brazil — read_airports","text":"","code":"read_airports(type = \"all\", showProgress = TRUE, cache = TRUE)"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airports.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download airports data from Brazil — read_airports","text":"type String. Whether function download data , public private airports. Defaults , returning fewer columns. Downloading public private airports separately return full set columns available data sets. showProgress Logical. Defaults TRUE display progress. cache Logical. Whether function read cached data downloaded previously. Defaults TRUE. FALSE, function always download data overwrite cached data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airports.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download airports data from Brazil — read_airports","text":"\"data.table\" \"data.frame\" object.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_airports.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download airports data from Brazil — read_airports","text":"","code":"if (FALSE)  if (interactive()) { # Read airports data all_airports <- read_airports(type = 'all')  public_airports <- read_airports(type = 'public')  private_airports <- read_airports(type = 'private') } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_flights.html","id":null,"dir":"Reference","previous_headings":"","what":"Download flight data from Brazil — read_flights","title":"Download flight data from Brazil — read_flights","text":"Download flight data Brazil’s Civil Aviation Agency (ANAC). data includes detailed information every international flight Brazil, well domestic flights within country. data include flight-level information airports origin destination, flight duration, aircraft type, payload, number passengers, several variables. description variables included data available https://www.gov.br/anac/pt-br/assuntos/regulados/empresas-aereas/Instrucoes-para--elaboracao-e-apresentacao-das-demonstracoes-contabeis/descricao-de-variaveis.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_flights.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Download flight data from Brazil — read_flights","text":"","code":"read_flights(   date = 202001,   type = \"basica\",   showProgress = TRUE,   select = NULL,   cache = TRUE )"},{"path":"https://ipeagit.github.io/flightsbr/reference/read_flights.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Download flight data from Brazil — read_flights","text":"date Numeric. Date data format yyyymm. Defaults 202001. download data months year, user can pass 4-digit year input yyyy. parameter also accepts vector dates c(202001, 202006, 202012). type String. Whether data set type basica (flight stage, default) combinada (flight origin destination - OFOD). showProgress Logical. Defaults TRUE display progress. select vector column names positions keep. rest columns read. order columns passed determines order columns result. cache Logical. Whether function read cached data downloaded previously. Defaults TRUE. FALSE, function always download data overwrite cached data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/reference/read_flights.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Download flight data from Brazil — read_flights","text":"\"data.table\" \"data.frame\" object. columns returned class type \"character\".","code":""},{"path":[]},{"path":"https://ipeagit.github.io/flightsbr/reference/read_flights.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Download flight data from Brazil — read_flights","text":"","code":"if (FALSE)  if (interactive()) { # Read flights data f201506 <- read_flights(date = 201506)  f2015 <- read_flights(date = 2015) } # \\dontrun{}"},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v101-dev","dir":"Changelog","previous_headings":"","what":"flightsbr v1.0.1 dev","title":"flightsbr v1.0.1 dev","text":"function read_aircrafts() now deprecated favor read_aircraft() simply fix typo function name. behavior outputs identical. Closes #45","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v100","dir":"Changelog","previous_headings":"","what":"flightsbr v1.0.0","title":"flightsbr v1.0.0","text":"CRAN release: 2024-10-22 names columns data outputs now cleanned {janitor} Function read_airports() now downloads v2 version public airports data. Closes #41 Function read_airfares() working . Closes #30. prices air tickets now returned numeric. Function read_flights() fixed decimal values numeric columns. Closes #43 Function read_airports() fixed numeric values \"altitude\" column. Closes #42 Internally check consistency date inputs. date input must consistent either 6-digit format yyyymm 4-digit format yyyy. New support function latest_airfares_date() Fix error stopped reading aircraft data read_aircraft() multiple months number collums differed across months. Fixed using data.table::rbindlist(fill = TRUE)","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v050","dir":"Changelog","previous_headings":"","what":"flightsbr v0.5.0","title":"flightsbr v0.5.0","text":"CRAN release: 2024-09-18 Fixed ANAC’s broken link public airports Functions read_flights(), read_airport_movements(), read_aircraft() now accept vectors dates like c(202201, 202301) c(2022, 2024) Functions read_airports() read_aircraft() now cache parameter. package now significantly faster using curl::multi_download() download files parallel. brings advantage package now automatically detects whether data file updated downloaded . Removed dependency {httr} package Streamlined functions simplify package maintenance improve performance Using {fs} manage file paths {archive} unzip files Reorganization internal functions simplify package maintenance","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v041","dir":"Changelog","previous_headings":"","what":"flightsbr v0.4.1","title":"flightsbr v0.4.1","text":"CRAN release: 2024-04-23 read_flights() function now uses fread(encoding = 'Latin-1') internally avoid issues encoding. Closed #35. function get_airport_movement_dates_available() throw warnings NA values anymore. read_aircraft() function now used fread(skip = 1) internally read column names correctly.","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v040","dir":"Changelog","previous_headings":"","what":"flightsbr v0.4.0","title":"flightsbr v0.4.0","text":"CRAN release: 2023-12-04 functions read_flights() read_airport_movements() now new parameter cache, indicates whether function read cached data downloaded previously. Defaults TRUE. Closed #31. function read_aircraft() now date parameter, allows one download data aircraft registered ANAC particular years/months. Closed #33. functions now return numeric columns numeric class. Closed #32. Fixed bug unzipping files read_flights() function Unix systems. Closed #31. Updated link private airports data changed ANAC. Closed #34.","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v030","dir":"Changelog","previous_headings":"","what":"flightsbr v0.3.0","title":"flightsbr v0.3.0","text":"CRAN release: 2023-06-29 Function read_airfares() temporarily unavailable. See issue #30 Function read_flights() now accepts vector dates. Closed #29. Fixed broken link data dictionary airport movement data Fixed code rbindlist air fares multiple years. Closed #26. Fixed code read dates caught get_airfares_dates_available() “.CSV” ANAC url. Closed #27. Fixed code use get_airport_movement_dates_available()","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v021","dir":"Changelog","previous_headings":"","what":"flightsbr v0.2.1","title":"flightsbr v0.2.1","text":"CRAN release: 2022-11-27 Fixed bug read_flights() due changes ANAC data links. Fixed broken link intro_flightsbr vignette","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v020","dir":"Changelog","previous_headings":"","what":"flightsbr v0.2.0","title":"flightsbr v0.2.0","text":"CRAN release: 2022-05-05 Update urls new location flights data stored. makes read_flights() work . New function read_airfares() read data airfares domestic international flights Closed #22. data downloaded read_flights() read_airport_movements() now cached temp dir. Closed #20. columns now returned class character. fixes bug read_airport_movements() function. Closed #20.","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v012","dir":"Changelog","previous_headings":"","what":"flightsbr v0.1.2","title":"flightsbr v0.1.2","text":"CRAN release: 2022-03-18 Fixed bug stopped flightsbr downloading 2022 data.","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v011","dir":"Changelog","previous_headings":"","what":"flightsbr v0.1.1","title":"flightsbr v0.1.1","text":"CRAN release: 2022-03-06 functions read_flights() read_airport_movements() longer side effects objects named month year global environment. split_date() support function removed package. Closed #17. read_ functions now try download 2nd time 1st attempt failed. help overcome small issue instability ANAC data links. Closed #18. Using simpler / slightly faster version latlon_to_numeric() suppressed warnings. Update package citation, adding OSF preprint DOI.","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v010","dir":"Changelog","previous_headings":"","what":"flightsbr v0.1.0","title":"flightsbr v0.1.0","text":"CRAN release: 2022-02-08 New function read_aircraft() read data aircraft registered Brazilian Aeronautical Registry (Registro Aeronáutico Brasileiro - RAB) Closed #14. New function read_airports() read data public private airports. Closed #4 Closed #9. New function latest_flights_date() check date latest flight data available. Closed #16. New function read_airport_movements() download data airport movements. Closed #15. Function read_flights() now takes date input format yyyymm yyyy. date input 4-digit number, function now downloads data months year. Closed #1. Function read_flights() now automatically detects checks latest flights data available. Closed #13. split_date(): Split date yyyymmm year yyyy month mm check_date(): Check whether date input acceptable generate_all_months(): Generate months yyyymm format year latlon_to_numeric(): Convert spatial coordinates airports lat lon get_flights_url(): Put together url flight data files get_flight_dates_available(): Retrieve ANAC website dates available flights data download_flights_data(): Download read ANAC flight data get_airport_movements_url(): Put together url airport movement data files get_airport_movement_dates_available(): Retrieve dates available airport movements data download_airport_movement_data(): Download read ANAC airport movement data Three separate vignettes. general intro package, detailed vignettes read_flights read_airports(). new parameter select read_flights(), allowing user specify columns read. new tests read_flights(). Coverage 95.24%. Closed #5. New checks date input. Closed #2. Functions now fail gracefully case problems internet connection. Closed #7.","code":""},{"path":"https://ipeagit.github.io/flightsbr/news/index.html","id":"flightsbr-v001","dir":"Changelog","previous_headings":"","what":"flightsbr v0.0.1","title":"flightsbr v0.0.1","text":"CRAN release: 2022-01-21 Launch flightsbr v0.0.1 CRAN https://cran.r-project.org/package=flightsbr","code":""}]
